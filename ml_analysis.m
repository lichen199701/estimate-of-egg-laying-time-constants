 % Program to estimate the parameters of the 3-state model for egg laying% in C. elegans.  Model as described in Zhou, Schafer, and Schafer, IEEE% Trans. on Signal Processing, vol. 46, No. 10, October 1998.%% Given the observed intervals, estimate model parameters using% the ML algorithm. Initial estimates are provided by matching% the (bimodal) histogram of the log intervals. %% INPUT:  x: intervals between egg laying events%      name: [name of data set] optional % OUTPUT: p: probability of A->E%   lambda1: time constant for the I->I cycle%   lambda2: time constant for the A->A cycle%% Usage: [p,lambda1,lambda2]=ml_analysis(x,[name]) % SEE ALSO: local_mm.m, maxn.m, fy_fun.m, fmins.m%           Original program by G. Tong Zhou, Georgia Tech%           May 20, 1997%           Revised 5/6/99%           Revised by RWS, 12/03/2016%function [p,lambda1,lambda2]=ml_analysis(x,name) if nargin==1    plt=0;    name=' ';else    plt=1;endfsize=11;N=length(x); % data lengthdelta=.5;   %change this to modify histogram if not bimodal[ny,y]=hist(log(x),[0:delta:10]);           % histogram of log(x)fy=ny/(delta*N);                     % convert histogram to probabilitiesyi=[min(y):max(y)/500:max(y)];       % 501 points interpolationfyi=interp1(y,fy,yi,'PCHIP');        % fyi vs. yi smoother estimate % ******************* Step 1: Initial Estimates **********************%[maxy,max_loc]=local_mm(yi,fyi);        % find local maxima of fyi[foo,index2]=maxn(maxy,2);              % find two greatest local maxima max_loc=max_loc(index2);                % -log(lambda1) and -log(p*lambda2)maxy=maxy(index2);                      % k1/e and k2/e[foo,index]=sort(max_loc);              % sort location in ascending ordermax_loc=max_loc(index);                 % location in ascending ordermaxy=maxy(index);                       % corresponding peak magnitudek1_hat=exp(1)*maxy(1);                  % estimate for k1k2_hat=exp(1)*maxy(2);                  % estimate for k2 lambda1_hat=1/exp(max_loc(1));          % estimate for lambda1plambda2_hat=1/exp(max_loc(2));         % estimate for p*lambda2 plambda1_hat=plambda2_hat+k1_hat*(lambda1_hat-plambda2_hat);    % Eq. (36)p_hat=plambda1_hat/lambda1_hat; lambda2_hat=plambda2_hat/p_hat; % Eq. (37)para1=[p_hat,lambda1_hat,lambda2_hat];  % starting values for NLLS est.xplt=-2:.01:12;fest11 = (k1_hat*lambda1_hat*exp(-lambda1_hat*exp(xplt))).*exp(xplt);fest12 = (k2_hat*plambda2_hat*exp(-plambda2_hat*exp(xplt))).*exp(xplt);% probability density estimate by peak picking on interpolated histogramfest1=fest11+fest12;    % Eq. (17) (shown as red curve on final plot) %% ******** Step 2: Nonlinear Least-Squares Estimates *****************%options(14)=100*5;                      % set max number of iterationspara2=fmins('fy_fun',para1,options,[],y,fy);   %NLLS estimate of parameters% para2 is starting estimate for ML estimate of parameters.p2=para2(1); lambda12=para2(2); lambda22=para2(3);k12= p2*(lambda12-lambda22)/(lambda12-p2*lambda22);k22= lambda12*(1-p2)/(lambda12-p2*lambda22);fest21 = (k12*lambda12*exp(-lambda12*exp(xplt)) ).*exp(xplt);fest22 = (k22*p2*lambda22*exp(-p2*lambda22*exp(xplt))).*exp(xplt);% PDF estimate by NNLSfest2=fest21+fest22;  %  can be plotted if desired (not shown on final plot) %% ******************* Step 3: ML Estimates ***********************%worm_pdf=@(x,p,lambda1,lambda2) worm_model(x,p,lambda1,lambda2);options = statset('MaxIter',400, 'MaxFunEvals',800);[para3,CI3]=mle(x,'pdf',worm_pdf,'start',para2,...    'lower',[0,0,0],'upper',[1,Inf,Inf],'options',options);  p=para3(1); lambda1=para3(2); lambda2=para3(3);  % ML estimate of parameters%%   Plot Maximum Likelihood Estimate%if(plt==1)clf                                     % clear figuresubplot('position',[.1,.4,.8,.5])han=bar(y,fy);      % show histogramhan.FaceColor=[1,1,1]*.9;hold onxplt=-2:.01:12;     % plotting range for PDF of log intervalsp3=para3(1); lambda13=para3(2); lambda23=para3(3);k13= p3*(lambda13-lambda23)/(lambda13-p3*lambda23);k23= lambda13*(1-p3)/(lambda13-p3*lambda23);fest31 = (k13*lambda13*exp(-lambda13*exp(xplt))).*exp(xplt); fest32 = (k23*p3*lambda23*exp(-p3*lambda23*exp(xplt))).*exp(xplt);%   ML estimate of PDF of log intervalsfest3=fest31+fest32;%H1=plot(xplt,fest31,'b:',xplt,fest32,'g:',xplt,fest3,'k',yi,fyi,'--r');%   PDF in black, components in blue and green and smoothed histogram in%   redset(H1,'linewidth',2)A=axis;H2=plot(-log(lambda13)*[1,1],[0 A(4)],'--b',-log(p3*lambda23)*[1,1],[0, A(4)],'--g');%   show peak locations on ML estimateset(H2,'linewidth',2)axis(A);hold offtitle(['Maximum Likelihood PDF Estimate for ',name],'fontsize',fsize)xlabel('log intervals','fontsize',fsize)text(10,.9*A(4),['p = ',num2str(round(p3,4))],'fontsize',fsize)text(10,.8*A(4),['\lambda_1 = ',num2str(round(lambda13,4))],'fontsize',fsize)text(10,.7*A(4),['\lambda_2 = ',num2str(round(lambda23,4))],'fontsize',fsize)set(gca,'fontsize',fsize)end%%   Compute likelihood values for different parameter estimates%loglikelihood=sum(log(worm_model(x,p,lambda1,lambda2) ) );loglikelihoodLS=sum(log(worm_model(x,p2,lambda12,lambda22)));loglikelihoodPP=sum(log(worm_model(x,p_hat,lambda1_hat,lambda2_hat)));%%   Print estimates of parameters to the screen %ps=[para1(1); para2(1); para3(1)]; l1s=[para1(2); para2(2); para3(2)];l2s=[para1(3); para2(3); para3(3)];likes=[loglikelihoodPP;loglikelihoodLS;loglikelihood];disp(' ')disp(['Three-state model parameters for ',name])Estimates = table(categorical({'Peak Picking';'Least-Squares';'Max Likelihood'}),...    ps,l1s,l2s,likes,...    'VariableNames',{'method', 'p','lambda1','lambda2','loglikelihood'})%%   Print ML estimate and 95% confidence intervals%pl=[CI3(1,1);p;CI3(2,1)];l1l=[CI3(1,2);lambda1;CI3(2,2)];l2l=[CI3(1,3);lambda2;CI3(2,3)];disp(['95% Confidence intervals for ML estimate of parameters for ',name]);ConfidenceIntervals = table(categorical({'lower limit';'ML estimate';'upper limit'}),...    pl,l1l,l2l,...    'VariableNames',{'range','p','lambda1','lambda2'})   